{"version":3,"sources":["store/actions.js","Catalog.js","Header.js","store/reducers.js","App.js","serviceWorker.js","index.js"],"names":["toggleGood","goodId","type","payload","book","Catalog","_this$props","this","props","goods","booked","console","log","react_default","a","createElement","className","concat","map","item","index","selected","onClick","key","src","image","alt","title","price","React","Component","connect","state","dispatch","bindActionCreators","Header","_this","count","elt","getSelectedCount","initialState","store","createStore","arguments","length","undefined","action","Object","toConsumableArray","objectSpread","App","es","src_Header","src_Catalog","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c491f299.chunk.js","sourcesContent":["export const toggleGood = (goodId) => {\n    return {\n        type: 'TOGGLE_GOOD',\n        payload: goodId\n    }\n};\n\nexport const book = () => {\n    return {\n        type: 'BOOK'\n    }\n};","import React from 'react';\n// import Good from './Good';\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\nimport { toggleGood } from \"./store/actions\";\n\nclass Catalog extends React.Component {\n    render() {\n        let { goods, toggleGood, booked } = this.props;\n        console.log(goods);\n\n        return (\n            <div>\n                <h3>{ booked ? 'Ваш заказ:' : 'Выберите товары:'}</h3>\n                <div className={`catalog${ booked ? ' booked' : ''}`}>\n                    { goods.map((item, index) => (\n                            <div\n                                className={ `good${ item.selected ? ' selected' : '' }` }\n                                onClick={\n                                    () => { if (!booked) { toggleGood(index) } }\n                                }\n                                key={index}>\n                                <img src={item.image} alt={item.title}/>\n                                <div className=\"title\">{item.title}</div>\n                                <div className=\"price\">{item.price} ₽</div>\n                            </div>\n                        )\n                    ) }\n                </div>\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        goods: state.goods,\n        booked: state.booked\n    }\n};\nconst mapActionsToProps = (dispatch) => {\n    return {\n        toggleGood: bindActionCreators(toggleGood, dispatch),\n    }\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Catalog);","import React from 'react';\nimport './App.css';\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\nimport { toggleGood, book } from \"./store/actions\";\n\nclass Header extends React.Component {\n    getSelectedCount() {\n        const goods = this.props.goods;\n        let count = 0;\n        goods.map((elt) => {\n            if (elt.selected) {\n                count++;\n            }\n            return elt;\n        });\n        return count;\n    };\n\n    book = () => {\n        this.props.book();\n    };\n\n    render() {\n        const { booked } = this.props;\n        return (\n            <div className={`order-box ${booked ? ' hidden' : ''}`}>\n                <div className=\"cart\">В корзине: <b>{this.getSelectedCount()}</b></div>\n                <div className=\"book\" onClick={this.book}>Заказать</div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        goods: state.goods,\n        booked: state.booked\n    }\n};\nconst mapActionsToProps = (dispatch) => {\n    return {\n        toggleGood: bindActionCreators(toggleGood, dispatch),\n        book: bindActionCreators(book, dispatch),\n    }\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Header);","const initialState = {\n    goods: [\n        {\n            title: 'микроволновая печь V-HOME P70H20L-KH',\n            price: '3 390',\n            image: 'https://p.fast.ulmart.ru/p/gen/445/44575/4457582.jpg',\n            selected: false\n        },\n        {\n            title: 'ноутбук Lenovo IdeaPad 330-14AST, 81D5000LRU',\n            price: '17 990',\n            image: 'https://p.fast.ulmart.ru/p/gen/443/44317/4431734.jpg',\n            selected: false\n        },\n        {\n            title: 'ноутбук Lenovo IdeaPad 330-15IGM, 81D1009JRU\\n',\n            price: '17 050',\n            image: 'https://p.fast.ulmart.ru/p/gen/444/44436/4443684.jpg',\n            selected: false\n        },\n        {\n            title: 'электробритва Braun Series 3 3040TS white',\n            price: '5 990',\n            image: 'https://p.fast.ulmart.ru/p/gen/434/43426/4342669.jpg',\n            selected: false\n        },\n        {\n            title: 'карта памяти TransFlash 64ГБ MicroSDXC class 10',\n            price: '1 030',\n            image: 'https://p.fast.ulmart.ru/p/gen/423/42379/4237973.jpg',\n            selected: false\n        },\n        {\n            title: 'Моторное масло FORD Formula F/Fuel Economy ',\n            price: '1 990',\n            image: 'https://p.fast.ulmart.ru/p/gen/60/6001/600190.jpg',\n            selected: false\n        },\n        {\n            title: 'сплит-система Whirlpool SPIW WH409LL, Inverter\\n',\n            price: '18 990',\n            image: 'https://p.fast.ulmart.ru/p/gen/423/42344/4234430.jpg',\n            selected: false\n        },\n        {\n            title: 'Велосипет Roadweller RWB-21, рама 17, 1 ',\n            price: '5 990',\n            image: 'https://p.fast.ulmart.ru/p/gen/415/41555/4155587.jpg',\n            selected: false\n        },\n        {\n            title: 'Мангал кованый Пикник МК-007',\n            price: '3 390',\n            image: 'https://p.fast.ulmart.ru/p/gen/346/34687/3468768.jpg',\n            selected: false\n        }\n    ],\n    booked: false\n};\n\nexport const rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'TOGGLE_GOOD':\n            let goods = [...state.goods];\n            goods[action.payload].selected = !goods[action.payload].selected;\n            return {\n                ...state,\n                goods: goods\n            };\n\n        case 'BOOK':\n            console.log('HI');\n            return {\n                ...state,\n                booked: true\n            };\n\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport './App.css';\nimport Catalog from './Catalog';\nimport Header from './Header';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport { rootReducer } from \"./store/reducers\";\n\nconst store = createStore(rootReducer);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Provider store={store}>\n            <header className=\"App-header\">\n                <div className=\"logo\">Webstore</div>\n                <Header />\n            </header>\n            <Catalog />\n        </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}